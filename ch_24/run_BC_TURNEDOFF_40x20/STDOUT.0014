(PID.TID 0014.0001) 
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) //                      MITgcm UV
(PID.TID 0014.0001) //                      =========
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // execution environment starting up...
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // MITgcmUV version:  checkpoint66j
(PID.TID 0014.0001) // Build user:        whitefar
(PID.TID 0014.0001) // Build host:        kahutea
(PID.TID 0014.0001) // Build date:        Thu Nov 26 13:39:15 NZDT 2020
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Execution Environment parameter file "eedata"
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) ># Example "eedata" file
(PID.TID 0014.0001) ># Lines beginning "#" are comments
(PID.TID 0014.0001) ># nTx - No. threads per process in X
(PID.TID 0014.0001) ># nTy - No. threads per process in Y
(PID.TID 0014.0001) > &EEPARMS
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) ># Note: Some systems use & as the
(PID.TID 0014.0001) ># namelist terminator. Other systems
(PID.TID 0014.0001) ># use a / character (as shown here).
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0014.0001) //                                  ( and "eedata"       )
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001)      nPx =    4 ; /* No. processes in X */
(PID.TID 0014.0001)      nPy =    4 ; /* No. processes in Y */
(PID.TID 0014.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0014.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0014.0001)      sNx =   10 ; /* Tile size in X */
(PID.TID 0014.0001)      sNy =    5 ; /* Tile size in Y */
(PID.TID 0014.0001)      OLx =    5 ; /* Tile overlap distance in X */
(PID.TID 0014.0001)      OLy =    5 ; /* Tile overlap distance in Y */
(PID.TID 0014.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0014.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0014.0001)       Nr =   60 ; /* No. levels in the vertical   */
(PID.TID 0014.0001)       Nx =   40 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0014.0001)       Ny =   20 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0014.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0014.0001)   nProcs =   16 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0014.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0014.0001) usingMPI =    T ; /* Flag used to control whether MPI is in use */
(PID.TID 0014.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0014.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0014.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0014.0001) useCoupler=    F ;/* Flag used to control communications with   */
(PID.TID 0014.0001)                   /*  other model components, through a coupler */
(PID.TID 0014.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0014.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0014.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0014.0001) 
(PID.TID 0014.0001) ======= Starting MPI parallel Run =========
(PID.TID 0014.0001)  My Processor Name (len:  7 ) = kahutea
(PID.TID 0014.0001)  Located at (  3,  2) on processor grid (0:  3,0:  3)
(PID.TID 0014.0001)  Origin at  (    31,    11) on global grid (1:    40,1:    20)
(PID.TID 0014.0001)  North neighbor = processor 0015
(PID.TID 0014.0001)  South neighbor = processor 0013
(PID.TID 0014.0001)   East neighbor = processor 0002
(PID.TID 0014.0001)   West neighbor = processor 0010
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // Mapping of tiles to threads
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // Tile <-> Tile connectvity table
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // Tile number: 000012 (process no. = 000014)
(PID.TID 0014.0001) //        WEST: Tile = 000011, Process = 000010, Comm = messages
(PID.TID 0014.0001) //                bi = 000001, bj = 000001
(PID.TID 0014.0001) //        EAST: Tile = 000009, Process = 000002, Comm = messages
(PID.TID 0014.0001) //                bi = 000001, bj = 000001
(PID.TID 0014.0001) //       SOUTH: Tile = 000008, Process = 000013, Comm = messages
(PID.TID 0014.0001) //                bi = 000001, bj = 000001
(PID.TID 0014.0001) //       NORTH: Tile = 000016, Process = 000015, Comm = messages
(PID.TID 0014.0001) //                bi = 000001, bj = 000001
(PID.TID 0014.0001) 
(PID.TID 0014.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0014.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Parameter file "data"
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) ># ====================
(PID.TID 0014.0001) ># | Model parameters |
(PID.TID 0014.0001) ># ====================
(PID.TID 0014.0001) >#
(PID.TID 0014.0001) ># Continuous equation parameters
(PID.TID 0014.0001) > &PARM01
(PID.TID 0014.0001) > Tref = 60*-2.1,
(PID.TID 0014.0001) > Sref = 60*34.5,
(PID.TID 0014.0001) >
(PID.TID 0014.0001) > viscAz=1.E-4,
(PID.TID 0014.0001) > no_slip_sides=.FALSE.,
(PID.TID 0014.0001) > no_slip_bottom=.true.,
(PID.TID 0014.0001) > diffKzT=5.E-6,
(PID.TID 0014.0001) > diffKzS=5.E-6,
(PID.TID 0014.0001) > rhoConst=1030.,
(PID.TID 0014.0001) > rhoConst= 1.028900e+03,
(PID.TID 0014.0001) > rhoNil= 1.028900e+03,
(PID.TID 0014.0001) > rhoConstFresh=999.8,
(PID.TID 0014.0001) > eosType='JMD95Z',
(PID.TID 0014.0001) > hFacMin=0.3,
(PID.TID 0014.0001) > hFacInf=0.1,
(PID.TID 0014.0001) > hFacSup=5.0,
(PID.TID 0014.0001) ># select_rStar=2,
(PID.TID 0014.0001) ># nonlinFreeSurf=4,
(PID.TID 0014.0001) > implicitDiffusion=.TRUE.,
(PID.TID 0014.0001) > implicitViscosity=.TRUE.,
(PID.TID 0014.0001) > viscC4Leith=2.0,
(PID.TID 0014.0001) > viscC4Leithd=2.0,
(PID.TID 0014.0001) > useAreaViscLength=.TRUE.,
(PID.TID 0014.0001) > sideDragFactor=0.,
(PID.TID 0014.0001) > highOrderVorticity  = .TRUE.,
(PID.TID 0014.0001) > bottomDragQuadratic=2.1E-3,
(PID.TID 0014.0001) > tempAdvScheme=7,
(PID.TID 0014.0001) > saltAdvScheme=7,
(PID.TID 0014.0001) > StaggerTimeStep=.TRUE.,
(PID.TID 0014.0001) > multiDimAdvection=.TRUE.,
(PID.TID 0014.0001) > vectorInvariantMomentum=.TRUE.,
(PID.TID 0014.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0014.0001) >  exactConserv=.TRUE.,
(PID.TID 0014.0001) >  convertFW2Salt = 33.4,
(PID.TID 0014.0001) ># selectBotDragQuadr=2,
(PID.TID 0014.0001) ># useCDScheme = .TRUE.,
(PID.TID 0014.0001) ># useJamartWetPoints=.TRUE.,
(PID.TID 0014.0001) ># HeatCapacity_Cp = 3974.,
(PID.TID 0014.0001) ># gravity=9.81,
(PID.TID 0014.0001) ># implicitFreeSurface=.TRUE.,
(PID.TID 0014.0001) > readBinaryPrec=64,
(PID.TID 0014.0001) >#writeBinaryPrec=64,
(PID.TID 0014.0001) > useSingleCpuIO=.TRUE.,
(PID.TID 0014.0001) > debugLevel=-1,
(PID.TID 0014.0001) > plotLevel =0,
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) >
(PID.TID 0014.0001) ># Elliptic solver parameters
(PID.TID 0014.0001) > &PARM02
(PID.TID 0014.0001) > cg2dMaxIters=1000,
(PID.TID 0014.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0014.0001) > cg3dMaxIters=400,
(PID.TID 0014.0001) > cg3dTargetResidual=1.E-13,
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) >
(PID.TID 0014.0001) ># Time stepping parameters
(PID.TID 0014.0001) > &PARM03
(PID.TID 0014.0001) > nIter0=0,
(PID.TID 0014.0001) > endTime=31557600.0,
(PID.TID 0014.0001) > deltaT=80,
(PID.TID 0014.0001) > abEps=0.1,
(PID.TID 0014.0001) > momDissip_In_AB=.FALSE.,
(PID.TID 0014.0001) >#cAdjFreq = -1.,
(PID.TID 0014.0001) >#tauCD = 400000.0,
(PID.TID 0014.0001) > pChkptFreq=2592000.0,
(PID.TID 0014.0001) > chkptFreq=2592000.0,
(PID.TID 0014.0001) > dumpFreq=2592000.0,
(PID.TID 0014.0001) > monitorSelect=2,
(PID.TID 0014.0001) > monitorFreq=259200.0,
(PID.TID 0014.0001) ># for time dependent open boundary conditions, activate the following 3 lines:
(PID.TID 0014.0001) > periodicExternalForcing=.TRUE.,
(PID.TID 0014.0001) > externForcingPeriod=86400.0,
(PID.TID 0014.0001) > externForcingCycle =1036800.0,
(PID.TID 0014.0001) ># externForcingPeriod=100.0,
(PID.TID 0014.0001) ># externForcingCycle =1200.0,
(PID.TID 0014.0001) >
(PID.TID 0014.0001) >
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) >
(PID.TID 0014.0001) ># Gridding parameters
(PID.TID 0014.0001) > &PARM04
(PID.TID 0014.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0014.0001) > dXspacing=230.6664021767681,
(PID.TID 0014.0001) > dYspacing=84.21052631578948,
(PID.TID 0014.0001) > ygOrigin = -80.0,
(PID.TID 0014.0001) ># usingSphericalPolarGrid=.TRUE.,
(PID.TID 0014.0001) ># delX=50*0.1,
(PID.TID 0014.0001) ># delY=50*0.1,
(PID.TID 0014.0001) > delZ=60*11.0,
(PID.TID 0014.0001) >#-
(PID.TID 0014.0001) > pCellMix_select= 20,
(PID.TID 0014.0001) > pCellMix_delR  = 20.,
(PID.TID 0014.0001) ># interViscAr_pCell = .TRUE.,
(PID.TID 0014.0001) ># interDiffKr_pCell = .TRUE.,
(PID.TID 0014.0001) > pCellMix_viscAr = 60*4.e-4,
(PID.TID 0014.0001) > pCellMix_diffKr = 60*2.e-4,
(PID.TID 0014.0001) ># current default: diffKzT=5.E-5, viscAz=1.E-3,
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) >
(PID.TID 0014.0001) ># Input datasets
(PID.TID 0014.0001) > &PARM05
(PID.TID 0014.0001) > bathyFile='bathybox',
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) >6048
(PID.TID 0014.0001) 
(PID.TID 0014.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0014.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0014.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0014.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0014.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0014.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0014.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0014.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0014.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0014.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0014.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0014.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0014.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Parameter file "data.pkg"
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) ># Packages
(PID.TID 0014.0001) > &PACKAGES
(PID.TID 0014.0001) > useShelfIce=.TRUE.,
(PID.TID 0014.0001) ># useDiagnostics=.TRUE.,
(PID.TID 0014.0001) >  useCAL   = .TRUE.,
(PID.TID 0014.0001) >#  useOBCS        = .TRUE.,
(PID.TID 0014.0001) >
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) 
(PID.TID 0014.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0014.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/obcs                 compiled but not used ( useOBCS                  = F )
 pkg/cal                  compiled   and   used ( useCAL                   = T )
 pkg/shelfice             compiled   and   used ( useShelfIce              = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled   and   used ( +vectorInvariantMomentum = T )
 pkg/mom_fluxform         compiled but not used ( & not vectorInvariantMom = F )
 pkg/cd_code              compiled but not used ( useCDscheme              = F )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0014.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0014.0001) 
(PID.TID 0014.0001) CAL_READPARMS: opening data.cal
(PID.TID 0014.0001)  OPEN_COPY_DATA_FILE: opening file data.cal
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Parameter file "data.cal"
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) >#
(PID.TID 0014.0001) ># *******************
(PID.TID 0014.0001) ># Calendar Parameters
(PID.TID 0014.0001) ># *******************
(PID.TID 0014.0001) > &CAL_NML
(PID.TID 0014.0001) > TheCalendar='gregorian',
(PID.TID 0014.0001) > startDate_1=19920101,
(PID.TID 0014.0001) > startDate_2=000000,
(PID.TID 0014.0001) > calendarDumps = .TRUE.,
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) 
(PID.TID 0014.0001) CAL_READPARMS: finished reading data.cal
(PID.TID 0014.0001)  SHELFICE_READPARMS: opening data.shelfice
(PID.TID 0014.0001)  OPEN_COPY_DATA_FILE: opening file data.shelfice
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Parameter file "data.shelfice"
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) ># ===================================
(PID.TID 0014.0001) ># | Parameters for SHELFICE package |
(PID.TID 0014.0001) ># ===================================
(PID.TID 0014.0001) > &SHELFICE_PARM01
(PID.TID 0014.0001) > SHELFICEboundaryLayer = .TRUE.,
(PID.TID 0014.0001) > SHELFICEtopoFile='icetopo',
(PID.TID 0014.0001) > SHELFICEloadAnomalyFile = 'phi0surf',
(PID.TID 0014.0001) > SHELFICEconserve = .TRUE.,
(PID.TID 0014.0001) > no_slip_shelfice = .false.,
(PID.TID 0014.0001) > SHELFICEwriteState = .TRUE.,
(PID.TID 0014.0001) > SHELFICEuseGammaFrict = .TRUE.,
(PID.TID 0014.0001) > shiCdrag          = 0.0050,
(PID.TID 0014.0001) > /
(PID.TID 0014.0001) 
(PID.TID 0014.0001)  SHELFICE_READPARMS: finished reading data.shelfice
(PID.TID 0014.0001) SET_PARMS: done
(PID.TID 0014.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Calendar configuration >>> START <<<
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) 
(PID.TID 0014.0001) modelstart = /* Start time of the model integration [s] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelend  = /* End time of the model integration [s] */
(PID.TID 0014.0001)                 3.155760000000000E+07
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelStep = /* Time interval for a model forward step [s] */
(PID.TID 0014.0001)                 8.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingGregorianCalendar= /* Calendar Type: Gregorian Calendar */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingJulianCalendar = /* Calendar Type: Julian Calendar */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingNoLeapYearCal  = /* Calendar Type: without Leap Year */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingModelCalendar  = /* Calendar Type: Model Calendar */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelStartDate YYYYMMDD = /* Model start date YYYY-MM-DD */
(PID.TID 0014.0001)                19920101
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)   modelStartDate HHMMSS = /* Model start date HH-MM-SS  */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelEndDate   YYYYMMDD = /* Model end date YYYY-MM-DD */
(PID.TID 0014.0001)                19921231
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)   modelEndDate   HHMMSS = /* Model end date HH-MM-SS  */
(PID.TID 0014.0001)                   60000
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) intyears = /* Number of calendar years affected by the integration */
(PID.TID 0014.0001)                       1
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) intmonths= /* Number of calendar months affected by the integration */
(PID.TID 0014.0001)                      12
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) intdays = /* Number of calendar days affected by the integration */
(PID.TID 0014.0001)                     366
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelIter0 = /* Base timestep number  */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelIterEnd = /* Final timestep number  */
(PID.TID 0014.0001)                  394470
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) modelIntSteps= /* Number of model timesteps  */
(PID.TID 0014.0001)                  394470
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Calendar configuration  >>> END <<<
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) 
(PID.TID 0014.0001) GAD_INIT_FIXED: GAD_OlMinSize=  4  0  1
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // ===================================
(PID.TID 0014.0001) // GAD parameters :
(PID.TID 0014.0001) // ===================================
(PID.TID 0014.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0014.0001)                       7
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0014.0001)                       7
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0014.0001)                       7
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0014.0001)                       7
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) // ===================================
(PID.TID 0014.0001) INI_CG2D: CG2D normalisation factor =  1.1853082943439016E-03
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Model configuration
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) //
(PID.TID 0014.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0014.0001) //
(PID.TID 0014.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0014.0001)               'OCEANIC'
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0014.0001)    60 @ -2.100000000000000E+00              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0014.0001)    60 @  3.450000000000000E+01              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscAhMax = /* Maximum lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0014.0001)                 1.000000000000000E+21
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscAhGrid = /* Grid dependent lateral harmonic viscosity ( non-dim. ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useFullLeith = /* Use Full Form of Leith Viscosity on/off flag*/
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useAreaViscLength = /* Use area for visc length instead of geom. mean*/
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC2leith = /* Leith harmonic visc. factor (on grad(vort),non-dim.) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC2leithD = /* Leith harmonic viscosity factor (on grad(div),non-dim.)*/
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC2smag = /* Smagorinsky harmonic viscosity factor (non-dim.) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscA4Max = /* Maximum biharmonic viscosity ( m^2/s ) */
(PID.TID 0014.0001)                 1.000000000000000E+21
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscA4Grid = /* Grid dependent biharmonic viscosity ( non-dim. ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC4leith = /* Leith biharm viscosity factor (on grad(vort), non-dim.)*/
(PID.TID 0014.0001)                 2.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC4leithD = /* Leith biharm viscosity factor (on grad(div), non-dim.) */
(PID.TID 0014.0001)                 2.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscC4Smag = /* Smagorinsky biharm viscosity factor (non-dim) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0014.0001)    60 @  1.000000000000000E-04              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0014.0001)                 2.100000000000000E-03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0014.0001)    60 @  5.000000000000000E-06              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0014.0001)    60 @  5.000000000000000E-06              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0014.0001)                 2.000000000000000E+02
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0014.0001)                -2.000000000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0014.0001)                -8.000000000000000E-01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0014.0001)                 1.000000000000000E-06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) eosType =  /* Type of Equation of State */
(PID.TID 0014.0001)               'JMD95Z'
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0014.0001)                 3.994000000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0014.0001)                 2.731500000000000E+02
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0014.0001)                 1.028900000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0014.0001)    60 @  1.000000000000000E+00              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0014.0001)    61 @  1.000000000000000E+00              /* K =  1: 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0014.0001)                 9.998000000000000E+02
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0014.0001)                 9.810000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0014.0001)                 9.810000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0014.0001)    60 @  1.000000000000000E+00              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0014.0001)    61 @  1.000000000000000E+00              /* K =  1: 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0014.0001)                 8.616400000000000E+04
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0014.0001)                 7.292123516990375E-05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0014.0001)                 1.000000000000000E-04
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0014.0001)                 9.999999999999999E-12
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0014.0001)                 1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0014.0001)                 1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0014.0001)                 1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0014.0001)                 3.000000000000000E-01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0014.0001)                 1.000000000000000E-01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0014.0001)                 5.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0014.0001)                 1.234567000000000E+05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0014.0001)                 1.234567000000000E+05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0014.0001)                 3.340000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0014.0001)                 1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0014.0001)                 1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0014.0001)                       1
(PID.TID 0014.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useEnergyConservingCoriolis= /* Flx-Form Coriolis scheme flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useJamartWetPoints= /* Coriolis WetPoints method flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0014.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0014.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0014.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0014.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0014.0001)                      64
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0014.0001)                      32
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0014.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0014.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0014.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0014.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0014.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0014.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0014.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0014.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0014.0001) debugLevel =  /* select debug printing level */
(PID.TID 0014.0001)                      -1
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) //
(PID.TID 0014.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0014.0001) //
(PID.TID 0014.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0014.0001)                    1000
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0014.0001)                       1
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0014.0001)                 1.000000000000000E-13
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0014.0001)                -1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0014.0001)                       1
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) //
(PID.TID 0014.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0014.0001) //
(PID.TID 0014.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0014.0001)                 8.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0014.0001)                 8.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0014.0001)    60 @  8.000000000000000E+01              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0014.0001)                 8.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0014.0001)                 1.000000000000000E-01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0014.0001)                  394470
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0014.0001)                  394470
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0014.0001)                 3.155760000000000E+07
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0014.0001)                 2.592000000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0014.0001)                 2.592000000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0014.0001)                 2.592000000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0014.0001)                 2.592000000000000E+05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0014.0001)                       2
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0014.0001)                 8.640000000000000E+04
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0014.0001)                 1.036800000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0014.0001)                 5.052631578947372E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) //
(PID.TID 0014.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0014.0001) //
(PID.TID 0014.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0014.0001)                       0
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0014.0001)                 1.234567000000000E+05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0014.0001)                -1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0014.0001)                -1.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0014.0001)                 9.719117504130624E-04
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0014.0001)                 1.028900000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0014.0001)                 5.500000000000000E+00,      /* K =  1 */
(PID.TID 0014.0001)    59 @  1.100000000000000E+01,             /* K =  2: 60 */
(PID.TID 0014.0001)                 5.500000000000000E+00       /* K = 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0014.0001)    60 @  1.100000000000000E+01              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0014.0001)    40 @  2.306664021767681E+02              /* I =  1: 40 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0014.0001)    20 @  8.421052631578948E+01              /* J =  1: 20 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0014.0001)                -8.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0014.0001)                 6.370000000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0014.0001)                 7.035325266391432E+03,      /* I =  1 */
(PID.TID 0014.0001)                 7.265991668568200E+03,      /* I =  2 */
(PID.TID 0014.0001)                 7.496658070744968E+03,      /* I =  3 */
(PID.TID 0014.0001)                 7.727324472921737E+03,      /* I =  4 */
(PID.TID 0014.0001)                 7.957990875098505E+03,      /* I =  5 */
(PID.TID 0014.0001)                 8.188657277275273E+03,      /* I =  6 */
(PID.TID 0014.0001)                 8.419323679452042E+03,      /* I =  7 */
(PID.TID 0014.0001)                 8.649990081628810E+03,      /* I =  8 */
(PID.TID 0014.0001)                 8.880656483805578E+03,      /* I =  9 */
(PID.TID 0014.0001)                 9.111322885982347E+03       /* I = 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0014.0001)                 8.042105263157895E+02,      /* J =  1 */
(PID.TID 0014.0001)                 8.884210526315791E+02,      /* J =  2 */
(PID.TID 0014.0001)                 9.726315789473686E+02,      /* J =  3 */
(PID.TID 0014.0001)                 1.056842105263158E+03,      /* J =  4 */
(PID.TID 0014.0001)                 1.141052631578948E+03       /* J =  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0014.0001)                -5.500000000000000E+00,      /* K =  1 */
(PID.TID 0014.0001)                -1.650000000000000E+01,      /* K =  2 */
(PID.TID 0014.0001)                -2.750000000000000E+01,      /* K =  3 */
(PID.TID 0014.0001)                -3.850000000000000E+01,      /* K =  4 */
(PID.TID 0014.0001)                -4.950000000000000E+01,      /* K =  5 */
(PID.TID 0014.0001)                -6.050000000000000E+01,      /* K =  6 */
(PID.TID 0014.0001)                -7.150000000000000E+01,      /* K =  7 */
(PID.TID 0014.0001)                -8.250000000000000E+01,      /* K =  8 */
(PID.TID 0014.0001)                -9.350000000000000E+01,      /* K =  9 */
(PID.TID 0014.0001)                -1.045000000000000E+02,      /* K = 10 */
(PID.TID 0014.0001)                -1.155000000000000E+02,      /* K = 11 */
(PID.TID 0014.0001)                -1.265000000000000E+02,      /* K = 12 */
(PID.TID 0014.0001)                -1.375000000000000E+02,      /* K = 13 */
(PID.TID 0014.0001)                -1.485000000000000E+02,      /* K = 14 */
(PID.TID 0014.0001)                -1.595000000000000E+02,      /* K = 15 */
(PID.TID 0014.0001)                -1.705000000000000E+02,      /* K = 16 */
(PID.TID 0014.0001)                -1.815000000000000E+02,      /* K = 17 */
(PID.TID 0014.0001)                -1.925000000000000E+02,      /* K = 18 */
(PID.TID 0014.0001)                -2.035000000000000E+02,      /* K = 19 */
(PID.TID 0014.0001)                -2.145000000000000E+02,      /* K = 20 */
(PID.TID 0014.0001)                -2.255000000000000E+02,      /* K = 21 */
(PID.TID 0014.0001)                -2.365000000000000E+02,      /* K = 22 */
(PID.TID 0014.0001)                -2.475000000000000E+02,      /* K = 23 */
(PID.TID 0014.0001)                -2.585000000000000E+02,      /* K = 24 */
(PID.TID 0014.0001)                -2.695000000000000E+02,      /* K = 25 */
(PID.TID 0014.0001)                -2.805000000000000E+02,      /* K = 26 */
(PID.TID 0014.0001)                -2.915000000000000E+02,      /* K = 27 */
(PID.TID 0014.0001)                -3.025000000000000E+02,      /* K = 28 */
(PID.TID 0014.0001)                -3.135000000000000E+02,      /* K = 29 */
(PID.TID 0014.0001)                -3.245000000000000E+02,      /* K = 30 */
(PID.TID 0014.0001)                -3.355000000000000E+02,      /* K = 31 */
(PID.TID 0014.0001)                -3.465000000000000E+02,      /* K = 32 */
(PID.TID 0014.0001)                -3.575000000000000E+02,      /* K = 33 */
(PID.TID 0014.0001)                -3.685000000000000E+02,      /* K = 34 */
(PID.TID 0014.0001)                -3.795000000000000E+02,      /* K = 35 */
(PID.TID 0014.0001)                -3.905000000000000E+02,      /* K = 36 */
(PID.TID 0014.0001)                -4.015000000000000E+02,      /* K = 37 */
(PID.TID 0014.0001)                -4.125000000000000E+02,      /* K = 38 */
(PID.TID 0014.0001)                -4.235000000000000E+02,      /* K = 39 */
(PID.TID 0014.0001)                -4.345000000000000E+02,      /* K = 40 */
(PID.TID 0014.0001)                -4.455000000000000E+02,      /* K = 41 */
(PID.TID 0014.0001)                -4.565000000000000E+02,      /* K = 42 */
(PID.TID 0014.0001)                -4.675000000000000E+02,      /* K = 43 */
(PID.TID 0014.0001)                -4.785000000000000E+02,      /* K = 44 */
(PID.TID 0014.0001)                -4.895000000000000E+02,      /* K = 45 */
(PID.TID 0014.0001)                -5.005000000000000E+02,      /* K = 46 */
(PID.TID 0014.0001)                -5.115000000000000E+02,      /* K = 47 */
(PID.TID 0014.0001)                -5.225000000000000E+02,      /* K = 48 */
(PID.TID 0014.0001)                -5.335000000000000E+02,      /* K = 49 */
(PID.TID 0014.0001)                -5.445000000000000E+02,      /* K = 50 */
(PID.TID 0014.0001)                -5.555000000000000E+02,      /* K = 51 */
(PID.TID 0014.0001)                -5.665000000000000E+02,      /* K = 52 */
(PID.TID 0014.0001)                -5.775000000000000E+02,      /* K = 53 */
(PID.TID 0014.0001)                -5.885000000000000E+02,      /* K = 54 */
(PID.TID 0014.0001)                -5.995000000000000E+02,      /* K = 55 */
(PID.TID 0014.0001)                -6.105000000000000E+02,      /* K = 56 */
(PID.TID 0014.0001)                -6.215000000000000E+02,      /* K = 57 */
(PID.TID 0014.0001)                -6.325000000000000E+02,      /* K = 58 */
(PID.TID 0014.0001)                -6.435000000000000E+02,      /* K = 59 */
(PID.TID 0014.0001)                -6.545000000000000E+02       /* K = 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0014.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0014.0001)                -1.100000000000000E+01,      /* K =  2 */
(PID.TID 0014.0001)                -2.200000000000000E+01,      /* K =  3 */
(PID.TID 0014.0001)                -3.300000000000000E+01,      /* K =  4 */
(PID.TID 0014.0001)                -4.400000000000000E+01,      /* K =  5 */
(PID.TID 0014.0001)                -5.500000000000000E+01,      /* K =  6 */
(PID.TID 0014.0001)                -6.600000000000000E+01,      /* K =  7 */
(PID.TID 0014.0001)                -7.700000000000000E+01,      /* K =  8 */
(PID.TID 0014.0001)                -8.800000000000000E+01,      /* K =  9 */
(PID.TID 0014.0001)                -9.900000000000000E+01,      /* K = 10 */
(PID.TID 0014.0001)                -1.100000000000000E+02,      /* K = 11 */
(PID.TID 0014.0001)                -1.210000000000000E+02,      /* K = 12 */
(PID.TID 0014.0001)                -1.320000000000000E+02,      /* K = 13 */
(PID.TID 0014.0001)                -1.430000000000000E+02,      /* K = 14 */
(PID.TID 0014.0001)                -1.540000000000000E+02,      /* K = 15 */
(PID.TID 0014.0001)                -1.650000000000000E+02,      /* K = 16 */
(PID.TID 0014.0001)                -1.760000000000000E+02,      /* K = 17 */
(PID.TID 0014.0001)                -1.870000000000000E+02,      /* K = 18 */
(PID.TID 0014.0001)                -1.980000000000000E+02,      /* K = 19 */
(PID.TID 0014.0001)                -2.090000000000000E+02,      /* K = 20 */
(PID.TID 0014.0001)                -2.200000000000000E+02,      /* K = 21 */
(PID.TID 0014.0001)                -2.310000000000000E+02,      /* K = 22 */
(PID.TID 0014.0001)                -2.420000000000000E+02,      /* K = 23 */
(PID.TID 0014.0001)                -2.530000000000000E+02,      /* K = 24 */
(PID.TID 0014.0001)                -2.640000000000000E+02,      /* K = 25 */
(PID.TID 0014.0001)                -2.750000000000000E+02,      /* K = 26 */
(PID.TID 0014.0001)                -2.860000000000000E+02,      /* K = 27 */
(PID.TID 0014.0001)                -2.970000000000000E+02,      /* K = 28 */
(PID.TID 0014.0001)                -3.080000000000000E+02,      /* K = 29 */
(PID.TID 0014.0001)                -3.190000000000000E+02,      /* K = 30 */
(PID.TID 0014.0001)                -3.300000000000000E+02,      /* K = 31 */
(PID.TID 0014.0001)                -3.410000000000000E+02,      /* K = 32 */
(PID.TID 0014.0001)                -3.520000000000000E+02,      /* K = 33 */
(PID.TID 0014.0001)                -3.630000000000000E+02,      /* K = 34 */
(PID.TID 0014.0001)                -3.740000000000000E+02,      /* K = 35 */
(PID.TID 0014.0001)                -3.850000000000000E+02,      /* K = 36 */
(PID.TID 0014.0001)                -3.960000000000000E+02,      /* K = 37 */
(PID.TID 0014.0001)                -4.070000000000000E+02,      /* K = 38 */
(PID.TID 0014.0001)                -4.180000000000000E+02,      /* K = 39 */
(PID.TID 0014.0001)                -4.290000000000000E+02,      /* K = 40 */
(PID.TID 0014.0001)                -4.400000000000000E+02,      /* K = 41 */
(PID.TID 0014.0001)                -4.510000000000000E+02,      /* K = 42 */
(PID.TID 0014.0001)                -4.620000000000000E+02,      /* K = 43 */
(PID.TID 0014.0001)                -4.730000000000000E+02,      /* K = 44 */
(PID.TID 0014.0001)                -4.840000000000000E+02,      /* K = 45 */
(PID.TID 0014.0001)                -4.950000000000000E+02,      /* K = 46 */
(PID.TID 0014.0001)                -5.060000000000000E+02,      /* K = 47 */
(PID.TID 0014.0001)                -5.170000000000000E+02,      /* K = 48 */
(PID.TID 0014.0001)                -5.280000000000000E+02,      /* K = 49 */
(PID.TID 0014.0001)                -5.390000000000000E+02,      /* K = 50 */
(PID.TID 0014.0001)                -5.500000000000000E+02,      /* K = 51 */
(PID.TID 0014.0001)                -5.610000000000000E+02,      /* K = 52 */
(PID.TID 0014.0001)                -5.720000000000000E+02,      /* K = 53 */
(PID.TID 0014.0001)                -5.830000000000000E+02,      /* K = 54 */
(PID.TID 0014.0001)                -5.940000000000000E+02,      /* K = 55 */
(PID.TID 0014.0001)                -6.050000000000000E+02,      /* K = 56 */
(PID.TID 0014.0001)                -6.160000000000000E+02,      /* K = 57 */
(PID.TID 0014.0001)                -6.270000000000000E+02,      /* K = 58 */
(PID.TID 0014.0001)                -6.380000000000000E+02,      /* K = 59 */
(PID.TID 0014.0001)                -6.490000000000000E+02,      /* K = 60 */
(PID.TID 0014.0001)                -6.600000000000000E+02       /* K = 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0014.0001)    60 @  1.000000000000000E+00              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0014.0001)    61 @  1.000000000000000E+00              /* K =  1: 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0014.0001)    61 @  1.000000000000000E+00              /* K =  1: 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0014.0001)    61 @  1.000000000000000E+00              /* K =  1: 61 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0014.0001)    60 @  0.000000000000000E+00              /* K =  1: 60 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  2.306664021767681E+02              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  2.306664021767681E+02              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  8.421052631578948E+01              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  8.421052631578948E+01              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  2.306664021767681E+02              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  2.306664021767681E+02              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  8.421052631578948E+01              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  8.421052631578948E+01              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  2.306664021767681E+02              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  2.306664021767681E+02              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  8.421052631578948E+01              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  8.421052631578948E+01              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  2.306664021767681E+02              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  2.306664021767681E+02              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0014.0001)    10 @  8.421052631578948E+01              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0014.0001)     5 @  8.421052631578948E+01              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0014.0001)    10 @  1.942453913067521E+04              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0014.0001)     5 @  1.942453913067521E+04              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0014.0001)    10 @  1.942453913067521E+04              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0014.0001)     5 @  1.942453913067521E+04              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0014.0001)    10 @  1.942453913067521E+04              /* I =  1: 10 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0014.0001)     5 @  1.942453913067521E+04              /* J =  1:  5 */
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0014.0001)                 9.537448713161534E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // End of Model config. summary
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) 
(PID.TID 0014.0001) == Packages configuration : Check & print summary ==
(PID.TID 0014.0001) 
(PID.TID 0014.0001) SHELFICE_CHECK: #define ALLOW_SHELFICE
(PID.TID 0014.0001) 
(PID.TID 0014.0001) SHELFICE_CHECK: start of SHELFICE config. summary
(PID.TID 0014.0001) SHELFICEisOn = /* package is turned on */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEwriteState  = /* do simple standard output */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_dump_mdsio = /* use mdsio for snapshots */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_tave_mdsio = /* use mdsio for time averages */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_dump_mnc   = /* use netcdf for snapshots */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_tave_mnc   = /* use netcdf for time averages */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_dumpFreq = /* analoguous to dumpFreq */
(PID.TID 0014.0001)                 2.592000000000000E+06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_taveFreq = /* analoguous to taveFreq */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) useISOMIPTD = /* use simple isomip thermodynamics */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEconserve = /* use a conservative form of boundary conditions */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEboundaryLayer = /* use simple boundary layer scheme to suppress noise */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEadvDiffHeatFlux = /* use adv.-diff. instead of just diff. heat flux into the ice shelf */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEMassStepping = /* step forward ice shelf mass/thickness */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) no_slip_shelfice = /* use no slip boundary conditions */
(PID.TID 0014.0001)                   F
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEdragLinear    = /* linear drag coefficient */
(PID.TID 0014.0001)                 0.000000000000000E+00
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEdragQuadratic = /* quadratic drag coefficient */
(PID.TID 0014.0001)                 5.000000000000000E-03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICElatentHeat      = /* latent heat of ice */
(PID.TID 0014.0001)                 3.340000000000000E+05
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEheatCapacity_Cp = /* heat capacity of ice shelf */
(PID.TID 0014.0001)                 2.000000000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) rhoShelfice   = /* density of ice shelf */
(PID.TID 0014.0001)                 9.170000000000000E+02
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEkappa = /* thermal conductivity of ice shelf */
(PID.TID 0014.0001)                 1.540000000000000E-06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEthetaSurface = /* surface temperature above i.s. */
(PID.TID 0014.0001)                -2.000000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEheatTransCoeff = /* heat transfer coefficient */
(PID.TID 0014.0001)                 1.000000000000000E-04
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEsaltTransCoeff = /* salt transfer coefficient */
(PID.TID 0014.0001)                 5.050000000000000E-07
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEuseGammaFrict = /* use velocity dependent exchange coefficients */
(PID.TID 0014.0001)                   T
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiCdrag   = /* quadr. drag coefficient for uStar */
(PID.TID 0014.0001)                 5.000000000000000E-03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiZetaN   = /* parameter for gammaTurb */
(PID.TID 0014.0001)                 5.200000000000000E-02
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiRc      = /* parameter for gammaTurb (not used) */
(PID.TID 0014.0001)                 2.000000000000000E-01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiPrandtl = /* const. Prandtl No. for gammaTurb */
(PID.TID 0014.0001)                 1.380000000000000E+01
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiSchmidt = /* const. Schmidt No. for gammaTurb */
(PID.TID 0014.0001)                 2.432000000000000E+03
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) shiKinVisc = /* const. kin. viscosity for gammaTurb */
(PID.TID 0014.0001)                 1.950000000000000E-06
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEloadAnomalyFile = /* file name of loaded loadAnomaly field */
(PID.TID 0014.0001)               'phi0surf'
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEmassFile = /* file name of loaded mass field */
(PID.TID 0014.0001)               ''
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEtopoFile = /* file name of loaded under-ice topography */
(PID.TID 0014.0001)               'icetopo'
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICEMassDynTendFile = /* file name of loaded dynamic mass tendency field */
(PID.TID 0014.0001)               ''
(PID.TID 0014.0001)     ;
(PID.TID 0014.0001) SHELFICE_CHECK: end of SHELFICE config. summary
(PID.TID 0014.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0014.0001) // CONFIG_CHECK : Normal End
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) 
(PID.TID 0014.0001) Start initial hydrostatic pressure computation
(PID.TID 0014.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0014.0001) 
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) // Model current state
(PID.TID 0014.0001) // =======================================================
(PID.TID 0014.0001) 
(PID.TID 0014.0001) %CHECKPOINT     33480 0000033480
(PID.TID 0014.0001) %CHECKPOINT     64800 0000064800
(PID.TID 0014.0001) %CHECKPOINT     98280 0000098280
(PID.TID 0014.0001) %CHECKPOINT    130680 0000130680
(PID.TID 0014.0001) %CHECKPOINT    164160 0000164160
(PID.TID 0014.0001) %CHECKPOINT    196560 0000196560
(PID.TID 0014.0001) %CHECKPOINT    230040 0000230040
(PID.TID 0014.0001) %CHECKPOINT    263520 0000263520
(PID.TID 0014.0001) %CHECKPOINT    295920 0000295920
(PID.TID 0014.0001) %CHECKPOINT    329400 0000329400
(PID.TID 0014.0001) %CHECKPOINT    361800 0000361800
(PID.TID 0014.0001) %CHECKPOINT    394470 ckptA
(PID.TID 0014.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0014.0001)           User time:   5593.0774942189455
(PID.TID 0014.0001)         System time:   14.091404328122735
(PID.TID 0014.0001)     Wall clock time:   5607.6057829856873
(PID.TID 0014.0001)          No. starts:           1
(PID.TID 0014.0001)           No. stops:           1
(PID.TID 0014.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0014.0001)           User time:   3.9371997117996216E-002
(PID.TID 0014.0001)         System time:   3.9460007101297379E-003
(PID.TID 0014.0001)     Wall clock time:   4.3330907821655273E-002
(PID.TID 0014.0001)          No. starts:           1
(PID.TID 0014.0001)           No. stops:           1
(PID.TID 0014.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0014.0001)           User time:   5593.0380992218852
(PID.TID 0014.0001)         System time:   14.087445328012109
(PID.TID 0014.0001)     Wall clock time:   5607.5624151229858
(PID.TID 0014.0001)          No. starts:           1
(PID.TID 0014.0001)           No. stops:           1
(PID.TID 0014.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0014.0001)           User time:   2.0741999149322510E-002
(PID.TID 0014.0001)         System time:   4.2399987578392029E-003
(PID.TID 0014.0001)     Wall clock time:   2.4984121322631836E-002
(PID.TID 0014.0001)          No. starts:           1
(PID.TID 0014.0001)           No. stops:           1
(PID.TID 0014.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0014.0001)           User time:   5593.0173482224345
(PID.TID 0014.0001)         System time:   14.083203328773379
(PID.TID 0014.0001)     Wall clock time:   5607.5374159812927
(PID.TID 0014.0001)          No. starts:           1
(PID.TID 0014.0001)           No. stops:           1
(PID.TID 0014.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0014.0001)           User time:   5590.5137804001570
(PID.TID 0014.0001)         System time:   14.074586315080523
(PID.TID 0014.0001)     Wall clock time:   5605.0338392257690
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0014.0001)           User time:   5585.3261131420732
(PID.TID 0014.0001)         System time:   14.056837877258658
(PID.TID 0014.0001)     Wall clock time:   5599.8648462295532
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   9.3588681966066360
(PID.TID 0014.0001)         System time:   3.7595571950078011E-002
(PID.TID 0014.0001)     Wall clock time:   9.4069013595581055
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0014.0001)           User time:   4.2453245148062706
(PID.TID 0014.0001)         System time:   1.7431087791919708E-002
(PID.TID 0014.0001)     Wall clock time:   4.2339396476745605
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   2.5054894387722015
(PID.TID 0014.0001)         System time:   1.0714521631598473E-002
(PID.TID 0014.0001)     Wall clock time:   2.5324008464813232
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   241.81504400074482
(PID.TID 0014.0001)         System time:   1.0939174927771091
(PID.TID 0014.0001)     Wall clock time:   243.07799220085144
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "SHELFICE_THERMODYNAMICS [DO_OCEANIC_PHYS]":
(PID.TID 0014.0001)           User time:   12.493148617446423
(PID.TID 0014.0001)         System time:   5.9720333665609360E-002
(PID.TID 0014.0001)     Wall clock time:   12.537632465362549
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   1539.6920760199428
(PID.TID 0014.0001)         System time:   5.6244957912713289
(PID.TID 0014.0001)     Wall clock time:   1546.0166816711426
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "UPDATE_SURF_DR      [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   36.213093653321266
(PID.TID 0014.0001)         System time:   5.7244021445512772E-002
(PID.TID 0014.0001)     Wall clock time:   36.357124805450439
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   896.43169592320919
(PID.TID 0014.0001)         System time:   1.8294753823429346
(PID.TID 0014.0001)     Wall clock time:   898.61897301673889
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   73.706778272986412
(PID.TID 0014.0001)         System time:  0.17268503829836845
(PID.TID 0014.0001)     Wall clock time:   73.966199636459351
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   46.049042999744415
(PID.TID 0014.0001)         System time:  0.13186094164848328
(PID.TID 0014.0001)     Wall clock time:   46.255864858627319
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   772.23530838638544
(PID.TID 0014.0001)         System time:   1.5486443433910608
(PID.TID 0014.0001)     Wall clock time:   774.34015488624573
(PID.TID 0014.0001)          No. starts:      788940
(PID.TID 0014.0001)           No. stops:      788940
(PID.TID 0014.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   1907.6769767403603
(PID.TID 0014.0001)         System time:   3.3809709399938583
(PID.TID 0014.0001)     Wall clock time:   1912.0410933494568
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   3.1406567096710205
(PID.TID 0014.0001)         System time:   4.9233026802539825E-003
(PID.TID 0014.0001)     Wall clock time:   3.1390609741210938
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   2.9089539945125580
(PID.TID 0014.0001)         System time:   7.7548231929540634E-003
(PID.TID 0014.0001)     Wall clock time:   2.9463233947753906
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   3.0573497936129570
(PID.TID 0014.0001)         System time:   7.8903976827859879E-003
(PID.TID 0014.0001)     Wall clock time:   3.0610427856445312
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0014.0001)           User time:   4.7584539055824280
(PID.TID 0014.0001)         System time:   1.3342112302780151E-002
(PID.TID 0014.0001)     Wall clock time:   4.7578117847442627
(PID.TID 0014.0001)          No. starts:      394470
(PID.TID 0014.0001)           No. stops:      394470
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // Tile <-> Tile communication statistics
(PID.TID 0014.0001) // ======================================================
(PID.TID 0014.0001) // o Tile number: 000012
(PID.TID 0014.0001) //         No. X exchanges =              0
(PID.TID 0014.0001) //            Max. X spins =              0
(PID.TID 0014.0001) //            Min. X spins =     1000000000
(PID.TID 0014.0001) //          Total. X spins =              0
(PID.TID 0014.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0014.0001) //         No. Y exchanges =              0
(PID.TID 0014.0001) //            Max. Y spins =              0
(PID.TID 0014.0001) //            Min. Y spins =     1000000000
(PID.TID 0014.0001) //          Total. Y spins =              0
(PID.TID 0014.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0014.0001) // o Thread number: 000001
(PID.TID 0014.0001) //            No. barriers =      206635264
(PID.TID 0014.0001) //      Max. barrier spins =              1
(PID.TID 0014.0001) //      Min. barrier spins =              1
(PID.TID 0014.0001) //     Total barrier spins =      206635264
(PID.TID 0014.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
